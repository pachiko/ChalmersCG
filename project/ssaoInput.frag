#version 420

// required by GLSL spec Sect 4.5.3 (though nvidia does not, amd does)
precision highp float;

///////////////////////////////////////////////////////////////////////////////
// Input varyings from vertex shader
///////////////////////////////////////////////////////////////////////////////
in vec3 viewSpaceNormal;

///////////////////////////////////////////////////////////////////////////////
// Output color
///////////////////////////////////////////////////////////////////////////////
layout(location = 0) out vec4 fragmentColor;

void main() {
	vec3 n = normalize(viewSpaceNormal)*0.5 + 0.5; // map from [-1, 1] to [0, 1]
	fragmentColor = vec4(n, 1.0); // simply writes the view-space normal as the color
	return;
}